@using System.Data
@using System.Runtime.CompilerServices;
@using System.Data;
@rendermode InteractiveServer
@inject HttpClient Http
@inject IConfiguration Configuration

<h3>Upload Files</h3>

<InputFile OnChange="HandleFile1Selection" />
<InputFile OnChange="HandleFile2Selection" />

<button @onclick="UploadFiles">Upload</button>

<p><strong>Result:</strong>@((MarkupString)Result) </p>


@code {
    private string apiUrl;

    protected override void OnInitialized()
    {
        string? temp = Configuration["ApiSettings:BaseUrl"];
        if (temp == null) throw new NoNullAllowedException("You have not set ApiSettings:BaseUrl environment variable");
        apiUrl = temp;
    }
    private IBrowserFile? file1;
    private IBrowserFile? file2;
    private string Result = "No files uploaded yet.";

    private void HandleFile1Selection(InputFileChangeEventArgs e)
    {
        file1 = e.File;
    }

    private void HandleFile2Selection(InputFileChangeEventArgs e)
    {
        file2 = e.File;
    }

    private async void UploadFiles()
    {
        if (file1 == null || file2 == null)
        {
            Result = "Please select both files.";
            return;
        }

        var content = new MultipartFormDataContent();
        content.Add(new StreamContent(file1.OpenReadStream(file1.Size)), "file1", file1.Name);
        content.Add(new StreamContent(file2.OpenReadStream(file2.Size)), "file2", file2.Name);
        var response = await Http.PostAsync($"{this.apiUrl}/diff", content);
        Result = await response.Content.ReadAsStringAsync();
        Result = Result.Replace("\n", "<Br/>");

        if (!response.IsSuccessStatusCode)
        {
            Result = $"Error: {Result}.";
        }

        await InvokeAsync(StateHasChanged);
    }
}
